# bot_logger_messages.py

BOT_LOGGER_MESAGES = {
    # Ошибки переменных окружения
    'absent_practicum_token':
        'Отсутствует переменная окружения: токен Практикума.',
    'absent_telegram_token':
        'Отсутствует переменная окружения: токен Telegram.',
    'absent_telegram_chat_id':
        'Отсутствует переменная окружения: id чата Telegram.',
    'wrong_practicum_token':
        'Ошибочная переменная окружения: токен Практикума.',
    'wrong_telegram_token':
        'Ошибочная переменная окружения: токен Telegram.',
    'wrong_telegram_chat_id':
        'Ошибочная переменная окружения: id чата Telegram.',
    # Ошибки Практикума
    'connection':
        'Ошибка соединения с Практикумом: ',
    'request':
        'Ошибка запроса Практикума: ',
    'not_found':
        'Запрашиваемая страница не найдена: ',
    'end_point_status':
        'Неверный статус ответа Практикума: ',
    # Ошибки формата ответа Практикума
    'type_response': (
        'Неверный формат ответа Практикума: '
        'Тип "response": ожидается "dict", получен '
    ),
    'type_homeworks': (
        'Неверный формат ответа Практикума: '
        'Тип "homeworks": ожидается "dict", получен '
    ),
    'key_homeworks': (
        'Неверный формат ответа Практикума: '
        'Отсутствует ключ "homeworks"'
    ),
    'key_homework_name': (
        'Неверный формат ответа Практикума: '
        'Отсутствует ключ "homework_name"'
    ),
    'key_homework_id': (
        'Неверный формат ответа Практикума: '
        'Отсутствует ключ "id"'
    ),
    'key_status': (
        'Неверный формат ответа Практикума: '
        'Отсутствует ключ "status"'
    ),
    'key_in_statuses':
        'Неверный статус домашней работы: ',
    # Прочие ошибки
    'network':
        'Ошибка сети: ',
    # Другие сообщения
    'unhandled':
        'Сбой в работе программы: ',
    'program_abort':
        'Аварийное завершение работы программы.',
}


def get_message_by_key(key: str) -> str:
    """Формирует строку сообщение в виде строки."""
    return BOT_LOGGER_MESAGES.get(key, key)
